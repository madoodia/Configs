# Usefull commands in CentOS7 learning

# =========================
$ cp -r <folder> <destination>

# =========================

intall git 2.x
$ yum install http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm
$ sudo yum install git
$ git --version

# (/home/[USER]/.gitconfig)
$ git config --global user.name "Your Name"
$ git config --global user.email "user@domain.com"
$ git config list
$ 

# =========================
- Create ssh keygen: (/home/[USER]/.ssh/id_rsa.pub)
$ ssh-keygen -o
then copy it in github.com and create new ssh key

# =========================
# installing a theme
- go to https://www.gnome-look.org
- download a them like Qogir theme
$ git clone https://github.com/vinceliuice/Qogir-theme

- install Obsidian theme and icon pack
$ git clone https://github.com/madmaxms/theme-obsidian-2
$ cp -rf Obsidian-2/ ~/.theme

$ git clone https://github.com/madmaxms/iconpack-obsidian/
$ cp -rf iconpack-obsidian/ ~/.icons

install it:
$ ./Install -c -i -s
installed in /home/[USER]/.themes

# =========================
- install skype (or use flatpak/flathub)
$ wget https://go.skype.com/skypeforlinux-64.rpm
$ sudo yum install skypeforlinux-64.rpm 
$ skypeforlinux
$   

Insatall extensions in centos7, 8
https://www.2daygeek.com/how-to-install-and-configure-gnome-shell-extensions-in-linux/

# =========================
- install extension (https://micheleg.github.io/dash-to-dock/download.html)
-   Dash to Dock
-   GNOME Shell Extension
$ download latest zip file
$ unzip dash-to-dock@micxgx.gmail.com.zip -d ~/.local/share/gnome-shell/extensions/dash-to-dock@micxgx.gmail.com/
- to install the extension in your home directory. A Shell reload is required Alt+F2 r Enter and the extension has to be enabled with gnome-tweak-tool or with dconf.

# =========================
- How to remove the bottom panel in gnome 3 classic?
$ rm -r /usr/share/gnome-shell/extensions/window-list@gnome-shell-extensions.gcampax.github.com
If you want it back later, you may re-install that pluginâ€™s package.
$ yum reinstall gnome-shell-extension-window-list

# =========================
METHOD 1
- install wifi driver (https://www.youtube.com/watch?v=TG_EHEWHQuM)
$ lspci | grep -i broadcom
- Linux Find Wireless Wifi Driver Chipset Information
# Broadcom Inc. and subsidiaries BCM43142 802.11b/g/n (rev 01)
# getting RPM Fusion
https://rpmfusion.org/Configuration/
- manual installation:
$ sudo yum localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-7.noarch.rpm

Tainted repos

$ sudo yum install rpmfusion-free-release-tainted
$ sudo yum install libdvdcss
$ sudo yum install rpmfusion-nonfree-release-tainted

- install kernel-devel
$ sudo yum install kernel-devel
Installed:
  kernel-devel.x86_64 0:3.10.0-957.5.1.el7 

$ sudo yum install kernel-headers

Download driver (https://rpmfind.net)
google: BCM43142 Broadcom wl download rpm

- i downloaded verion of fedora 29 
( RpmFusion Non-Free for Fedora 29 for x86_64 >>> broadcom-wl-6.30.223.271-8.fc29.noarch.rpm)
$ sudo rpm -ivh broadcom-wl-6.30.223.271-8.fc29.noarch.rpm 


- install akmods
$ sudo yum install akmods

- run akmods
$ akmods

$ sudo modprobe wl

# --------------------
METHOD 2

first:
Build and install kmod-wl for EL6/7 (http://elrepo.org/tiki/wl-kmod)

second:
https://wiki.centos.org/HowTos/Laptops/Wireless/Broadcom

# =========================
- find and install all updates for softwares
$ sudo yum update

# =========================
- restart system
$ sudo reboot

-shutdown system
$ sudo poweroff

# =========================
- install Appimage formats
1. download file
2. make it executable
$ chmod u+x <AppImage File>
3. run to install

# =========================
$ lspci -v
$ lspci -vnn
$ lspci -vnn | grep VGA

remove an rpm package
$ sudo rpm -e <package name>

Download a package
$ wget http://....zip

unpack a tar.gz file
$ tar -xvf file.tar.gz

$ sudo yum install unzip
$ sudo yum install zip
$ sudo yum install unar (for rar files it is unar not unrar :) )

$ unzip /path/to/file.zip -d /destination

Disable/enable gnome gui
$ systemctl disable gdm
$ systemctl enable gdm

using root user:
$ sudo su
or
$ su -

# =========================
Create symlink from a file in current directory
$ ln -sf /path/to/a/file

Finding count of file in a directory$ find . -type f -print | wc -l

Finding a string in all files of a path
$ grep "redeem reward" /home/tom/*.txt
$ $ grep -r "redeem reward" /home/tom/

CPU Usage:
$ htop

remove files
$ sudo rm -rf /path/file

# =========================
- Update GCC
$ sudo yum install centos-release-scl
$ sudo yum install devtoolset-7-gcc*
$ scl enable devtoolset-7 bash
$ which gcc
$ gcc --version

# =========================
Getting size of each folder
$ sudo du -shc /var/*

# =========================
Install qt on centos7
- Download qt from https://download.qt.io or https://www.qt.io/download-open-source
$ sudo chmod +x qt-opensource-linux-x64-5.14.1.run
$ sudo ./qt-opensource-linux-x64-5.14.1.run

- add theses lines to .bashrc:
export PATH=/mnt/hdd/Qt5.14.1/Tools/QtCreator/bin:$PATH
export PATH=/mnt/hdd/Qt5.14.1/5.14.1/gcc_64/bin:$PATH
export LD_LIBRARY_PATH=/mnt/hdd/Qt5.14.1/5.14.1/gcc_64/lib:$LD_LIBRARY_PATH
# =========================
CUDA Toolkit 10.1 original for Lenovo Laptop
$ cd ~/Downloads
$ wget http://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda-repo-rhel7-10-1-local-10.1.243-418.87.00-1.0-1.x86_64.rpm
$ sudo rpm -i cuda-repo-rhel7-10-1-local-10.1.243-418.87.00-1.0-1.x86_64.rpm
$ sudo yum clean all
$ sudo yum -y install nvidia-driver-latest-dkms cuda

After installation
- add theses lines to .bashrc:
export PATH=/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
run:
$ source /root/.bashrc
$ nvcc --version

- Install CUDA samples and further tests by compiling CUDA programs in the 'cuda-samples'
cd cuda-samples/NVIDIA_CUDA-10.0_Samples/0_Simple/simpleCallback
make
# =========================
For creating SDKS_LOCATION:
First install your libraries or softwares like Qt5 or cuda
then create symlink from them in your sdks path
then use you sdks path in your build system

# =========================




