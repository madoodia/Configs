Building Boost:

Run: 
bootstrap.bat

Run:
b2.exe install --prefix="finalBuild" --with-atomic --with-chrono --with-container --with-context --with-contract --with-coroutine --with-date_time --with-exception --with-fiber --with-filesystem --with-graph --with-graph_parallel --with-iostreams --with-locale --with-log --with-math --with-mpi --with-program_options --with-python --with-random --with-regex --with-serialization --with-signals --with-stacktrace --with-system --with-test --with-thread --with-timer --with-type_erasure --with-wave --build-type=complete architecture="x86" address-model="64" runtime-link=static,shared toolset=msvc variant=release,debug link=static,shared threading=single,multi



Component configuration:

    - atomic                   : not building
    - chrono                   : not building
    - container                : not building
    - context                  : not building
    - contract                 : not building
    - coroutine                : not building
    - date_time                : not building
    - exception                : not building
    - fiber                    : not building
    - filesystem               : building
    - graph                    : not building
    - graph_parallel           : not building
    - iostreams                : not building
    - locale                   : not building
    - log                      : not building
    - math                     : not building
    - mpi                      : not building
    - program_options          : not building
    - python                   : building
    - random                   : not building
    - regex                    : not building
    - serialization            : not building
    - signals                  : not building
    - stacktrace               : not building
    - system                   : not building
    - test                     : not building
    - thread                   : building
    - timer                    : not building
    - type_erasure             : not building
    - wave                     : not building





------------------------------
ZLIB_URL = "https://github.com/madler/zlib/archive/v1.2.11.zip"
BOOST_URL = "http://downloads.sourceforge.net/project/boost/boost/1.61.0/boost_1_61_0.tar.gz"
TBB_URL = "https://github.com/01org/tbb/releases/download/2017_U5/tbb2017_20170226oss_win.zip"
TBB = https://github.com/01org/tbb/blob/master/download.md
JPEG_URL = "https://github.com/libjpeg-turbo/libjpeg-turbo/archive/1.5.1.zip"
TIFF_URL = "http://download.osgeo.org/libtiff/tiff-4.0.7.zip"
PNG_URL = "http://downloads.sourceforge.net/project/libpng/libpng16/older-releases/1.6.29/libpng-1.6.29.tar.gz"
OPENEXR_URL = "https://github.com/openexr/openexr/archive/v2.2.0.zip"
GLEW_URL = "http://downloads.sourceforge.net/project/glew/glew/2.0.0/glew-2.0.0-win32.zip"
PTEX_URL = "https://github.com/wdas/ptex/archive/v2.1.28.zip"
OIIO_URL = "https://github.com/OpenImageIO/oiio/archive/Release-1.7.14.zip"
OPENSUBDIV_URL = "https://github.com/PixarAnimationStudios/OpenSubdiv/archive/v3_1_1.zip"
HDF5_URL = "https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.0-patch1/src/hdf5-1.10.0-patch1.zip"
ALEMBIC_URL = "https://github.com/alembic/alembic/archive/1.7.1.zip"


------------------------------

building zlib:



cmake -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy -G "Visual Studio 15 2017 Win64" ../zlib-1.2.11


cmake --build . --config Debug
cmake --build . --config Release
cmake --build . --config RelWithDebInfo
cmake --build . --target INSTALL

-----------------------
building IlmBase: ===========
D:/_madoodia_/pixar_usd/openexr/IlmBase

cmake D:/_madoodia_/pixar_usd/openexr/IlmBase -G "Visual Studio 15 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/openexr/IlmBase/deploy -T host=x64

cmake --build . --target INSTALL


building OpenEXR:
D:/_madoodia_/pixar_usd/openexr/OpenEXR

cmake D:/_madoodia_/pixar_usd/openexr/OpenEXR -G "Visual Studio 15 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/openexr/OpenEXR/deploy -DILMBASE_PACKAGE_PREFIX=D:/_madoodia_/pixar_usd/openexr/IlmBase/deploy -DCMAKE_PREFIX_PATH=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy; -T host=x64

cmake --build . --target INSTALL


Building PyIlmBase: ===========

D:/_madoodia_/pixar_usd/openexr/PyIlmBase


----
old one:
cmake -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/openexr/PyIlmBase/deploy -DBOOST_INCLUDEDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBoost_INCLUDE_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBOOST_LIBRARYDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DBoost_LIBRARY_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DOPENEXR_HOME=D:/_madoodia_/pixar_usd/openexr/deploy;D:/_madoodia_/pixar_usd/openexr/deploy/include/OpenEXR -DILMBASE_LIBRARY=D:/_madoodia_/pixar_usd/openexr/deploy/lib -DILMBASE_INCLUDE_PATH=D:/_madoodia_/pixar_usd/openexr/deploy/include;D:/_madoodia_/pixar_usd/openexr/deploy/include/OpenEXR -DILMBASE_PACKAGE_PREFIX=D:/_madoodia_/pixar_usd/openexr/deploy -DPYTHON_NUMPY_INCLUDE_DIR=D:/_madoodia_/pixar_usd/numpy/numpy -G "Visual Studio 15 2017 Win64" ../PyIlmBase
----

cmake D:/_madoodia_/pixar_usd/openexr/PyIlmBase -G "Visual Studio 15 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/openexr/PyIlmBase/deploy -DILMBASE_PACKAGE_PREFIX=D:/_madoodia_/pixar_usd/openexr/IlmBase/deploy -DCMAKE_PREFIX_PATH=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy; -DBOOST_ROOT=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild -DBOOST_INCLUDEDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBoost_INCLUDE_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBOOST_LIBRARYDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DBoost_LIBRARY_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib  -DPYTHON_NUMPY_INCLUDE_DIR=D:/_madoodia_/pixar_usd/numpy/numpy -T host=x64

cmake --build . --config Debug
cmake --build . --config Release
cmake --build . --target INSTALL


Building OpenEXR_Viewer: ===========
D:/_madoodia_/pixar_usd/openexr/OpenEXR_Viewers

cmake D:/_madoodia_/pixar_usd/openexr/OpenEXR_Viewers -G "Visual Studio 15 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/openexr/OpenEXR_Viewers/deploy -DOPENEXR_PACKAGE_PREFIX=D:/_madoodia_/pixar_usd/openexr/OpenEXR/deploy -DCMAKE_PREFIX_PATH=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy; -T host=x64

cmake --build . --target INSTALL



-------------------------------------

Building OpenSubdiv:

cmake -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/OpenSubdiv/deploy -G "Visual Studio 15 2017 Win64" -DNO_EXAMPLES=ON -DNO_TUTORIALS=ON -DNO_REGRESSION=ON -DNO_DOC=ON -DNO_OMP=ON -DNO_CUDA=ON -DNO_OPENCL=ON -DNO_DX=ON -DNO_TESTS=ON -DGLEW_LOCATION=D:/_madoodia_/pixar_usd/glew-2.1.0 -DGLFW_LOCATION=D:/_madoodia_/pixar_usd/glfw-3.2.1.bin.WIN64 -DPTEX_LOCATION=D:/_madoodia_/pixar_usd/ptex-2.1.33/deploy -DZLIB_INCLUDE_DIR=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy/include -DZLIB_LIBRARY=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy/lib -DTBB_INCLUDE_DIR=D:/_madoodia_/pixar_usd/tbb2018_20180618oss/include -DTBB_LIBRARIES=D:/_madoodia_/pixar_usd/tbb2018_20180618oss/lib ../OpenSubdiv 


cmake --build . --config Release --target INSTALL


-------------------------------------

Building Tiff:

cmake -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/oiio_dependencies/tiff-4.0.9/deploy -G "Visual Studio 15 2017 Win64" ../tiff-4.0.9


cmake --build . --config Debug
cmake --build . --config Release
cmake --build . --target INSTALL

-------------------------------------
Building TBB: ???



-------------------------------------

Building OpenImageIO:

oiio_build is an empty folder
cd D:/_madoodia_/pixar_usd/oiio_build

-----
old one:

cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/oiio/deploy -DJPEG_LIBRARY=D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64/lib;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy/lib -DJPEG_INCLUDE_DIR=D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64/include;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy/include -DJPEG_PATH=D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy -DJPEGTURBO_PATH=D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy -DOPENJPEG_HOME=D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64 -DTIFF_INCLUDE_DIR=D:/_madoodia_/pixar_usd/tiff-4.0.9/deploy/include -DTIFF_LIBRARY=D:/_madoodia_/pixar_usd/tiff-4.0.9/deploy/lib -DPNG_LIBRARY=D:/_madoodia_/pixar_usd/libpng-1.6.35/deploy/lib -DPNG_PNG_INCLUDE_DIR=D:/_madoodia_/pixar_usd/libpng-1.6.35/deploy/include -DOPENEXR_HOME=D:/_madoodia_/pixar_usd/openexr/deploy -DILMBASE_INCLUDE_PATH=D:/_madoodia_/pixar_usd/openexr/deploy/include -DBOOST_INCLUDEDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBoost_INCLUDE_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBOOST_LIBRARYDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DBoost_LIBRARY_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DZLIB_INCLUDE_DIR=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy/include -DZLIB_LIBRARY=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy/lib -DLIBRAW_PATH=D:/_madoodia_/pixar_usd/LibRaw -DOPENGL_INCLUDE_DIR=D:/_madoodia_/pixar_usd/glew-2.1.0/include -DOPENGL_LIBRARIES=D:/_madoodia_/pixar_usd/glew-2.1.0/lib -DCMAKE_PREFIX_PATH=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy;D:/_madoodia_/pixar_usd/tiff-4.0.9/deploy;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy;D:/_madoodia_/pixar_usd/libpng-1.6.35/deploy;D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64; -T host=x64 ../oiio

-----
cmake D:/_madoodia_/pixar_usd/oiio -G "Visual Studio 15 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/oiio/deploy -DILMBASE_INCLUDE_PATH=D:/_madoodia_/pixar_usd/openexr/deploy/include -DOPENEXR_INCLUDE_PATH=D:/_madoodia_/pixar_usd/openexr/deploy/include -DBOOST_ROOT=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild -DCMAKE_PREFIX_PATH=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy;D:/_madoodia_/pixar_usd/tiff-4.0.9/deploy;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy;D:/_madoodia_/pixar_usd/libpng-1.6.35/deploy;D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64; -T host=x64



cmake --build . --config Debug
cmake --build . --config Release
cmake --build . --target INSTALL


related to python27_d.lib problem:
download python27_d.lib from:
https://github.com/austinsc/python/blob/master/lib/Windows/x64/python27_d.lib
and put it here:
C:/Python27/libs
------------------------------------
Building NASM: 

nmake /f Mkfiles/msvc.mak

then add nasm folder to PATH env var
------------------------------------
Building libjpeg-turbo: 

need NASM for building libjpeg-turbo

cmake -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy -G "Visual Studio 15 2017 Win64" ../libjpeg-turbo



cmake --build . --config Debug
cmake --build . --config Release
cmake --build . --target INSTALL


------------------------------------
Building FFMPEG: ???



------------------------------------
Building LibRaw: 

nmake -f Makefile.msvc

------------------------------------
Building Ptex: 

cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_PREFIX_PATH=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/ptex-2.1.33/deploy ../ptex-2.1.33


cmake --build . --config Debug
cmake --build . --config Release
cmake --build . --target INSTALL
------------------------------------
Building libgen: 

cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_PREFIX_PATH=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/libpng-1.6.35/deploy/deploy ../libpng-1.6.35


cmake --build . --config Debug
cmake --build . --config Release
cmake --build . --target INSTALL
------------------------------------
Building and installing Pyside:

1. Add These to PATH:
C:/Python27
C:/Program Files/CMake/bin
C:/Qt/5.11.1/msvc2017_64/bin
D:/_madoodia_/pixar_usd/libclang/bin
D:/_madoodia_/pixar_usd/OpenSSL/bin
C:/Program Files/Git/bin

2.
$git clone https://code.qt.io/pyside/pyside-setup

3.
$python setup.py build

4.
python setup.py install
------------------------------------
Building HDF5:

$mkdir hdf5_build
$cd D:/_madoodia_/pixar_usd/hdf5_build

cmake D:/_madoodia_/pixar_usd/hdf5-1.10.2  -G "Visual Studio 15 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/hdf5-1.10.2/deploy -T host=x64

cmake --build . --config Release --target install

------------------------------------
Building Alembic:

cmake D:/_madoodia_/pixar_usd/alembic-1.7.8  -G "Visual Studio 15 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/alembic-1.7.8/deploy -DALEMBIC_LIB_USES_BOOST=ON -DUSE_MAYA=ON -DMAYA_ROOT="C:/Program Files/Autodesk/Maya2018" -DILMBASE_ROOT=D:/_madoodia_/pixar_usd/openexr/IlmBase/deploy -DUSE_BINARIES=OFF -DUSE_TESTS=OFF -DUSE_HDF5=ON -DHDF5_ROOT=D:/_madoodia_/pixar_usd/hdf5-1.10.2/deploy -DCMAKE_CXX_FLAGS="-D H5_BUILT_AS_DYNAMIC_LIB" -DBOOST_ROOT=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild -DBOOST_INCLUDEDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBoost_INCLUDE_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBOOST_LIBRARYDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DBoost_LIBRARY_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DZLIB_INCLUDE_DIR=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy/include -DZLIB_LIBRARY=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy/lib -T host=x64

cmake --build . --config Release --target install

------------------------------------
Building USD: 

>>> Need to build all dependencies before building USD

TIP:
PyOpenGL and PySide2 dir should be added to PYTHONPATH:
(do it in a batch file ;) )
SET PYTHONPATH=%PYTHONPATH%;D:/_madoodia_/pixar_usd/PyOpenGL-3.1.0/OpenGL;D:/_madoodia_/pixar_usd/pyside-setup/pyside2_install/py2.7-qt5.11.1-64bit-release/lib/site-packages

about error of boost_python not found:
in D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib i renamced boost_python27-v... to boost_python-v...

$cd D:/_madoodia_/pixar_usd/USD


METHOD 1 Manual Building: (Have Problem on finding TBB ?????????)
TIP: I added built tbb from USD build_script process to D:/_madoodia_/pixar_usd/tbb and use this path

 
cmake D:/_madoodia_/pixar_usd/USD -G "Visual Studio 15 Win64" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/USD/installation -DBOOST_ROOT=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild -DBOOST_LIBRARYDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DBoost_LIBRARY_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/lib -DBOOST_INCLUDEDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include/boost-1_67 -DBoost_INCLUDE_DIRS=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include/boost-1_67;D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DBOOST_INCLUDEDIR=D:/_madoodia_/pixar_usd/boost_1_67_0/finalBuild/include -DPXR_BUILD_MAYA_PLUGIN=ON -DMAYA_LOCATION="C:/Program Files/Autodesk/Maya2018" -DMAYA_tbb_LIBRARY="C:/Program Files/Autodesk/Maya2018/include/tbb" -DPXR_BUILD_ALEMBIC_PLUGIN=ON -DALEMBIC_DIR=D:/_madoodia_/pixar_usd/alembic-1.7.8/deploy -DOPENEXR_LOCATION=D:/_madoodia_/pixar_usd/openexr/OpenEXR/deploy -DHDF5_LOCATION=D:/_madoodia_/pixar_usd/hdf5-1.10.2/deploy -DZLIB_INCLUDE_DIR=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy/include  -DZLIB_LIBRARY=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy/lib -DCMAKE_PREFIX_PATH=D:/_madoodia_/pixar_usd/zlib-1.2.11/deploy;D:/_madoodia_/pixar_usd/tiff-4.0.9/deploy;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy;D:/_madoodia_/ixar_usd/libpng-1.6.35/deploy;D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64; -DJPEG_LIBRARY=D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64/lib;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy/lib  -DJPEG_INCLUDE_DIR=D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64/include;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy/include  -DJPEG_PATH=D:/_madoodia_/pixar_usd/openjpeg-v2.3.0-windows-x64;D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy  -DJPEGTURBO_PATH=D:/_madoodia_/pixar_usd/libjpeg-turbo/deploy -DOPENEXR_HOME=D:/_madoodia_/pixar_usd/openexr/deploy -DOPENEXR_LOCATION=D:/_madoodia_/pixar_usd/openexr/OpenEXR/deploy -DILMBASE_INCLUDE_PATH=D:/_madoodia_/pixar_usd/openexr/deploy/include -DOPENGL_INCLUDE_DIR=D:/_madoodia_/pixar_usd/glew-2.1.0/include -DOPENGL_LIBRARIES=D:/_madoodia_/pixar_usd/glew-2.1.0/lib -DGLEW_LOCATION=D:/_madoodia_/pixar_usd/glew-2.1.0 -DGLFW_LOCATION=D:/_madoodia_/pixar_usd/glfw-3.2.1.bin.WIN64 -DPTEX_LOCATION=D:/_madoodia_/pixar_usd/ptex-2.1.33/deploy -DPTEX_LOCATION=D:/_madoodia_/pixar_usd/ptex-2.1.33/deploy -DOIIO_LOCATION=D:/_madoodia_/pixar_usd/oiio/deploy -DOPENSUBDIV_ROOT_DIR=D:/_madoodia_/pixar_usd/OpenSubdiv/deploy  -DTBB="D:/_madoodia_/pixar_usd/tbb;D:/_madoodia_/pixar_usd/tbb/include;D:/_madoodia_/pixar_usd/tbb/include/tbb;D:/_madoodia_/pixar_usd/tbb/include/serial;D:/_madoodia_/pixar_usd/tbb/include/serial/tbb" -DTBB_ROOT="D:/_madoodia_/pixar_usd/tbb;D:/_madoodia_/pixar_usd/tbb/include;D:/_madoodia_/pixar_usd/tbb/include/tbb;D:/_madoodia_/pixar_usd/tbb/include/serial;D:/_madoodia_/pixar_usd/tbb/include/serial/tbb" -DTBB_INCLUDE_DIRS="D:/_madoodia_/pixar_usd/tbb;D:/_madoodia_/pixar_usd/tbb/include;D:/_madoodia_/pixar_usd/tbb/include/tbb;D:/_madoodia_/pixar_usd/tbb/include/serial;D:/_madoodia_/pixar_usd/tbb/include/serial/tbb"  -DTBB_LIBRARIES="D:/_madoodia_/pixar_usd/tbb/lib" -T host=x64



cmake --build . --config Release --target install




METHOD 2 For Building USD:
Windows:
> python D:/_madoodia_/pixar_usd/USD/build_scripts/build_usd.py --generator "Visual Studio 15 2017 Win64" --python --alembic --hdf5 --maya --maya-location "C:/Program Files/Autodesk/Maya2018" "C:/USD"

>>> new version of USD (1.85) with MaterialX
*Error: Could not found MATERIALX_LIB_DIRS
manually change MATERIALX_LIB_DIRS:PATH=D:/_madoodia_/pixar_usd/USD/lib in CMakeCache.txt in source USD-18.09

cd D:/_madoodia_/pixar_usd/USD
>>> This gave an error for usdMtlx on windows, In linux it is installed fine
python build_scripts/build_usd.py --generator "Visual Studio 15 2017 Win64" --python --alembic --hdf5 --maya --maya-location "C:/Program Files/Autodesk/Maya2018" --materialx --openimageio "C:/USD"
>>> building without MaterialX
python build_scripts/build_usd.py --generator "Visual Studio 15 2017 Win64" --python --alembic --hdf5 --maya --maya-location "C:/Program Files/Autodesk/Maya2018" --openimageio "C:/USD"
>>> building without MaterialX and with Embree (Error)
python build_scripts/build_usd.py --generator "Visual Studio 15 2017 Win64" --python --alembic --hdf5 --maya --maya-location "C:/Program Files/Autodesk/Maya2018" --embree --embree-location "D:/_madoodia_/pixar_usd/embree" --openimageio "C:/USD"



linux:
TIP: For Hydra:Disabled Problem
TIP: need to install : (for GLFW work Properly)
$sudo yum install libXmu-devel libXi-devel libGL-devel -y
$sudo yum install libXcursor libXcursor-devel -y
$sudo yum install libXinerama libXinerama-devel -y

$sudo yum install -y audiofile audiofile-devel libtiff e2fsprogs-libs gamin gstreamer-plugins-base liberation-fonts-common liberation-mono-fonts liberation-sans-fonts liberation-serif-fonts libglade2 libICE libSM libvdpau libXau libxcb libX11 libXinerama libXinerama-devel libXext libXi libXmu libXcursor libXcursor-devel libXmu-devel libXp libXpm libXt libXv mesa-libGLw pangox-compat SDL tcsh xorg-x11-fonts-ISO8859-1-100dpi xorg-x11-fonts-ISO8859-1-75dpi zlib -y



Install USD:

sudo pip install PySide2
sudo pip install PyOpenGL
cd ~/workspace/pkgs
wget https://sourceforge.net/projects/glew/files/glew/2.1.0/glew-2.1.0.tgz
tar -xf glew-2.1.0.tgz
rm -rf glew-2.1.0.tgz
cd glew-2.1.0
make
sudo make install
make clean
cd ~/workspace/pkgs
git clone https://github.com/PixarAnimationStudios/USD
sudo yum install libXmu-devel libXi-devel libGL-devel libXinerama libXinerama-devel libXcursor libXcursor-devel cmake
sudo rm -rf /usr/local/USD
sudo mkdir /usr/local/USD
sudo python USD/build_scripts/build_usd.py --generator "Unix Makefiles" --python --alembic --hdf5 --maya --maya-location /mnt/applications/apps/Autodesk/Maya_2018_201711281015/ --materialx --openimageio  /usr/local/USD
usdview USD/extras/Kitchen_set/Kitchen_set.usd



Usage in Linux:
export PYTHONPATH=/usr/local/USD/lib/python:$PYTHONPATH
export PATH=/usr/local/USD/bin:/usr/local/USD/lib:$PATH



$cd USD
$usdview extras/usd/tutorials/convertingLayerFormats/Sphere.usda








This will automatically download all packages and install one by one

it needs to have PySide or PySide2 and OpenGL/GL in PYTHONPATH


USAGE in Windows:
Set the environment variables specified by the script when it finishes and launch usdview with a sample asset.
--- to a batch file for installing

SET PATH=%PATH%;C:/Python27;C:/USD/bin;C:/USD/lib;
SET PYTHONPATH=%PYTHONPATH%;C:/USD/lib/python;D:/_madoodia_/pixar_usd/Scripts;D:/_madoodia_/pixar_usd/site-packages;

SET MAYA_PLUG_IN_PATH=C:/USD/third_party/maya/plugin
SET MAYA_SCRIPT_PATH=C:/USD/third_party/maya/share/usd/plugins/usdMaya/resources
SET XBMLANGPATH=C:/USD/third_party/maya/share/usd/plugins/usdMaya/resources


---
> usdview D:/_madoodia_/pixar_usd/USD/extras/usd/tutorials/convertingLayerFormats/Sphere.usda


-------------------------------------------
Building googletest:

TIP: googletest should be build as MD with visual studio (msvc/gtest-md.sln)


----------------------------------------
Building AL_USDMaya:

TIP***: you should copy cmake of maya2018 devkit/lib into maya location/lib
TIP: googletest should be build as MD


cmake -G "Visual Studio 15 Win64" -DCMAKE_MODULE_PATH=D:/_madoodia_/pixar_usd/USD_manualBuild/cmake;"C:/Program Files/CMake/share/cmake-3.11/Modules";D:/_madoodia_/pixar_usd/USD_manualBuild/cmake/modules -DBOOST_ROOT=C:/USD/lib -DMAYA_LOCATION="C:/Program Files/Autodesk/Maya2018" 
_CONFIG_FILE=C:/USD/pxrConfig.cmake -DGTEST_ROOT=D:/_madoodia_/pixar_usd/googletest/googletest -DCMAKE_PREFIX_PATH="C:/Program Files/Autodesk/Maya2018/lib/cmake" -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/AL_USDMaya/deploy ..


TIP: Open sln file and in Visual Studio and in setting for all solution change Treat Warning as Error to No (/WX)

then Build Solution in Visual Studio

and gather released files into one directory to use later

then:
cmake --build . --config Release --target install




--------------------------------------------
Building usd-qt: (Luma Pictures)

need to have  theses requirements before building:
PySide2
typing

# in Windows
# 1. put all dirs in usd-qt instead of pxr

# USD/usd-qt contains:
# treemodel
# 	extensionModule.txt (create this empty file)
# usdlib
# usdQt
# usdQtEditors
# __init__.py
# setuppy

# 2. Edit codes
# should change some lines of codes in setup.py and usd-qt/treemodel/qt/base.py
# change this: from pxr.UsdQt._Qt import QtCore, QtGui to this: from usdQt._Qt import QtCore, QtGui

# 3. Edit python codes for using visual studio
# should change something in this file C:/Python27/Lib/distutils/msvc9compiler.py
# like this: VERSION = 14.0 instead of this: VERSION = get_build_version()
# to use Visual Studio 14
# and
# add /MACHINE:x64 to args >>> ld_args.append ('/MACHINE:x64')

# 4. Change codes in setup.py:
# change libraries = ['boost_python-mt', 'tbb', 'usd', 'sdf', 'tf'] to libraries = ['boost_python-vc140-mt-1_61', 'tbb', 'usd', 'sdf', 'tf']
# and add library_dirs = ["D:/_madoodia_/pixar_usd/USD/lib"] to Extension function for cppModules
# 5. run this:
$ python setup.py install

# then go to build/lib.win-amd64-2.7 and take all contents plus __init__.py inside USD folder under usd-qt folder name


>>>>> running in maya:

# 1. run run_alusdmaya_maya.bat that contains: -----------
rem madoodia@gmail.com
rem ..................
@ECHO off

SET USD_HOME_DIR=%~dp0


SET PATH=%USD_HOME_DIR%bin;%USD_HOME_DIR%lib;%USD_HOME_DIR%third_party/maya/lib;%PATH%;%USD_HOME_DIR%AL_USDMaya/lib;
SET PYTHONPATH=%USD_HOME_DIR%lib/python;%USD_HOME_DIR%AL_USDMaya/lib/python;%USD_HOME_DIR%AL_USDMaya;%USD_HOME_DIR%usd-qt;%USD_HOME_DIR%Scripts;%PYTHONPATH%;

SET MAYA_PLUG_IN_PATH=%MAYA_PLUG_IN_PATH%;%USD_HOME_DIR%third_party/maya/plugin;%USD_HOME_DIR%AL_USDMaya/plugin;
SET MAYA_SCRIPT_PATH=%MAYA_SCRIPT_PATH%;%USD_HOME_DIR%third_party/maya/share/usd/plugins/usdMaya/resources
SET XBMLANGPATH=%XBMLANGPATH%;%USD_HOME_DIR%third_party/maya/share/usd/plugins/usdMaya/resources

START /b "" "C:/Program Files/Autodesk/Maya2018/bin/maya.exe" %*


# in maya script editor: ---------------
import os
from pxr import Usd
import usdQt.app

print os.getcwd()


stage = Usd.Stage.CreateNew("HelloWorld.usda")
xform = stage.DefinePrim('/hello', 'Xform')
sphere = stage.DefinePrim('/hello/world', 'Sphere')
stage.GetRootLayer().Save()
dialog = usdQt.app.UsdOutliner(stage)
dialog.show()

# or
stage = Usd.Stage.Open("examples/Kitchen_set/Kitchen_set.usd")
dialog = usdQt.app.UsdOutliner(stage)
dialog.show()



# In Linux
# do the same hierarchy and usd-qt code changes and change some codes in setup.py
# change libraries = ['boost_python', 'tbb', 'usd', 'sdf', 'tf'] to libraries = ['/usr/local/USD/lib/libboost_python.so', '/usr/local/USD/lib/libtbb.so', '/usr/local/USD/lib/libusd.so', '/usr/local/USD/lib/libsdf.so', '/usr/local/USD/lib/libtf.so']
# and add library_dirs = ['/usr/local/USD/lib/'] to Extension function for cppModules
# and
$ python setup.py install 

>>>>> running in maya:

# 1. run run_usd_maya.bat that contains: -----------
#! /bin/sh -e
export PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/site-packages/:/usr/lib/python2.7/site-packages/OpenGL:/usr/local/USD/lib/python/:/usr/local/usd-qt:/usr/lib64/python2.7/site-packages/typing-3.6.4-py2.7.egg
export PATH=$PATH:/usr/lib64:/usr/lib:/home/maarabi/Qt5.11.1/5.11.1/gcc_64/bin:/home/maarabi/Qt5.11.1/5.11.1/gcc_64/bin:/usr/local/USD/bin:/usr/local/USD/lib:/usr/local/USD/third_party/maya/lib

export MAYA_PLUG_IN_PATH=/usr/local/USD/third_party/maya/plugin
export MAYA_SCRIPT_PATH=/usr/local/USD/third_party/maya/share/usd/plugins/usdMaya/resources
export XBMLANGPATH=/usr/local/USD/third_party/maya/share/usd/plugins/usdMaya/resources
/mnt/applications/apps/Autodesk/Maya_2018_201711281015/bin/maya




# in maya script editor: ---------------
import usdQt.app
from pxr import Usd
import os

os.getcwd()

stage = Usd.Stage.CreateNew("HelloWorld.usda")
xform = stage.DefinePrim('/hello', 'Xform')
sphere = stage.DefinePrim('/hello/world', 'Sphere')
stage.GetRootLayer().Save()

stage = Usd.Stage.Open("HelloWorld.usda")

dialog = usdQt.app.UsdOutliner(stage)
dialog.show()



--------------------------------------------
Building schemas in USD: ??????

cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_MODULE_PATH=D:/_madoodia_/pixar_usd/USD/cmake -DUSD_LIBRARY_DIR=D:/_madoodia_/pixar_usd/USD ..

cmake --build . --config Release --target install


--------------------------------------------

Building MaterialX:

cmake -DCMAKE_INSTALL_PREFIX=D:/_madoodia_/pixar_usd/MaterialX/deploy -G "Visual Studio 15 2017 Win64" .

cmake --build . --config Release --target install
